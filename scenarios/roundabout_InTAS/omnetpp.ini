[General]
network = artery.veins.World
sim-time-limit = 100s
debug-on-errors = true
print-undisposed = true

cmdenv-express-mode = true
cmdenv-autoflush = true

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumocfg = "roundabout/AudiKreis.sumocfg"

*.withPhysicalEnvironment = true
*.physicalEnvironment.groundType = "FlatGround"

**.result-recording-modes = all
**.scalar-recording = true
**.vector-recording = false

#*.radioMedium.pathLossType = "Gemv2"
*.radioMedium.pathLoss.withSmallScaleVariations = false
*.radioMedium.pathLoss.withVisualization = true

#DCC
*.node[*].vanetza[*].dcc.typename = "LimericDccEntity"
*.node[*].vanetza[*].dcc.enableDualAlpha = false


# separate random number generator for vehicle penetration rate
num-rngs = 2
*.traci.mapper.rng-0 = 1

*.withObstacles = true
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

[Config inet]
network = artery.inet.World

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW


*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2022-05-05 10:00:00"
*.node[*].middleware.services = xmldoc("services.xml")

World.traci.ignorePersons = false

[Config sumo-gui]
*.traci.launcher.sumo = "sumo-gui"

[Config inet_security]
extends = inet
*.node[*].vanetza[*].security.typename = "SecurityEntity"

[Config inet_multiple_vehicle_types]
extends = inet
# see above for configuration of mapper's random number generator (rng)
seed-1-mt = ${seed=0, 23, 42, 1337, 0815, 4711}

*.traci.mapper.typename = "traci.MultiTypeModuleMapper"
*.traci.mapper.vehicleTypes = xmldoc("vehicles.xml")

[Config envmod]
extends = inet
network = artery.envmod.World
**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.traci.mapper.PersonType = "artery.envmod.Person"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.drawPersons = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors-NR.xml")

*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true
*.node[*].environmentModel.*.drawDetectedPersons = true
*.node[*].environmentModel.*.doLineOfSightCheck = true

#########################
##Normal Vehicles Radar##
#########################
*.node[*].environmentModel.FrontLongRangeRadar.fovRange = 200m
*.node[*].environmentModel.FrontLongRangeRadar.fovAngle = 18
*.node[*].environmentModel.FrontLongRangeRadar.numSegments = 2


*.node[*].environmentModel.FrontShortRangeRadar.fovRange = 100m
*.node[*].environmentModel.FrontShortRangeRadar.fovAngle = 80
*.node[*].environmentModel.FrontShortRangeRadar.numSegments = 4

###############################
##Testa Autopilot Environment##
###############################

#*.node[*].environmentModel.FrontLongRangeRadar.fovRange = 250m
#*.node[*].environmentModel.FrontLongRangeRadar.fovAngle = 18
#*.node[*].environmentModel.FrontLongRangeRadar.numSegments = 2

#*.node[*].environmentModel.FrontShortRangeRadar.fovRange = 80m
#*.node[*].environmentModel.FrontShortRangeRadar.fovAngle = 240
#*.node[*].environmentModel.FrontShortRangeRadar.numSegments = 12

#*.node[*].environmentModel.RearShortRangeRadar.fovRange = 50m
#*.node[*].environmentModel.RearShortRangeRadar.fovAngle = 120
#*.node[*].environmentModel.RearShortRangeRadar.numSegments = 10

#*.node[*].environmentModel.SeeThrough.fovRange = 100m
